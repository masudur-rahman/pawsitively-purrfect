schema {
  query: RootQuery
  mutation: RootMutation
}

enum AdoptionStatus {
  Available
  Adopted
}

enum Gender {
  Male
  Female
}

type Pet {
  adoptionStatus: AdoptionStatus
  breed: String
  currentOwnerID: ID
  gender: Gender
  id: ID
  name: String
  photo: String
  shelterID: ID
  type: PetType
}

enum PetType {
  Cat
  Dog
}

type RootMutation {
  """Add new pet to a shelter"""
  addPet(gender: Gender, shelterID: ID!, name: String!, type: PetType!, breed: String): Pet

  """Add new shelter to the system"""
  addShelter(contactInformation: String, name: String!, description: String, website: String, location: String): Shelter

  """Adopt pet from a shelter"""
  adoptPet(petID: ID): Pet

  """Delete a shelter"""
  deleteShelter(id: ID!): Boolean

  """Login user to the system"""
  login(password: String!, username: String!): User

  """Register a new user to the system"""
  register(username: String!, email: String!, password: String!): User

  """Update pet information"""
  updatePet(name: String!, type: PetType!, breed: String, gender: Gender, id: ID!): Pet

  """Update user profile"""
  updateProfile(email: String!, firstName: String, lastName: String, bio: String, location: String, avatar: String, id: ID!, username: String!): User

  """Update shelter information"""
  updateShelter(location: String, contactInformation: String, id: ID!, name: String!, description: String, website: String): Shelter
}

type RootQuery {
  """Find pets accross platform based on search criteria"""
  findPets(breed: String, gender: Gender, shelterID: ID, adoptionStatus: AdoptionStatus, name: String, type: PetType): [Pet]

  """List all pets owned by logged-in user"""
  listPets: [Pet]

  """List pets by shelter"""
  listShelterPets(shelterID: ID!, adoptionStatus: AdoptionStatus): [Pet]

  """List shelters by filter"""
  listShelters(description: String, website: String, location: String, ownerID: ID, name: String): [Shelter]

  """Get a pet by ID."""
  pet(id: ID!): Pet

  """Get logged-in user profile"""
  profile: User

  """Get a shelter by ID."""
  shelter(id: ID!): Shelter

  """Get a user by ID."""
  user(id: ID, name: String): User
}

type Shelter {
  contactInformation: String
  description: String
  id: ID
  location: String
  logo: String
  name: String
  numberOfPets: Int
  ownerID: ID
  website: String
}

type User {
  avatar: String
  bio: String
  email: String
  firstName: String
  id: ID
  isActive: Boolean
  isAdmin: Boolean
  lastName: String
  location: String
  username: String
}

